// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]


use chrono::NaiveDateTime;
use bigdecimal::BigDecimal;
use uuid::Uuid;
#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(account_number, plan_id, plan_ver_id, customer_id, trading_group_id))]
pub struct PtAccount {
    pub account_number: String,
    pub plan_id: Uuid,
    pub plan_ver_id: i32,
    pub customer_id: Uuid,
    pub trading_group_id: Uuid,
    pub pass_upgrade_breach_reset_group_id: Option<Uuid>,
    pub competition_id: Option<Uuid>,
    pub account_trading_login: Option<String>,
    pub account_trading_password: Option<String>,
    pub account_type: Option<String>,
    pub account_enabled: bool,
    pub account_archived: bool,
    pub account_created_ts: NaiveDateTime,
    pub account_lastupdate_ts: Option<NaiveDateTime>,
    pub account_platform_url: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(ch_id))]
pub struct PtAccountCashHistory {
    pub ch_id: i32,
    pub account_number: String,
    pub plan_id: Uuid,
    pub plan_ver_id: i32,
    pub customer_id: Uuid,
    pub trading_group_id: Uuid,
    pub ch_datetime: NaiveDateTime,
    pub ch_debt: BigDecimal,
    pub ch_credit: BigDecimal,
    pub ch_balance: BigDecimal,
    pub ch_status: Option<String>,
    pub ch_comment: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(account_number, plan_id, plan_ver_id, customer_id, trading_group_id))]
pub struct PtAccountDetail {
    pub account_number: String,
    pub plan_id: Uuid,
    pub plan_ver_id: i32,
    pub customer_id: Uuid,
    pub trading_group_id: Uuid,
    pub order_id: Option<Uuid>,
    pub account_display_name: Option<String>,
    pub account_current_balance: Option<BigDecimal>,
    pub account_current_swaps: Option<BigDecimal>,
    pub account_current_commissions: Option<BigDecimal>,
    pub account_current_profit: Option<BigDecimal>,
    pub account_current_equity: Option<BigDecimal>,
    pub account_prev_equity: Option<BigDecimal>,
    pub account_prev_balance: Option<BigDecimal>,
    pub account_daily_loss: Option<BigDecimal>,
    pub account_total_loss: Option<BigDecimal>,
    pub account_breached: Option<bool>,
    pub account_passed: Option<bool>,
    pub account_upgraded: Option<bool>,
    pub account_resetted: Option<bool>,
    pub account_withdrawal_allowed: Option<bool>,
    pub account_hit_profit_target: Option<bool>,
    pub account_visible_leaderboard: Option<bool>,
    pub account_last_history_sync: Option<NaiveDateTime>,
    pub account_last_order_date_sync: Option<NaiveDateTime>,
    pub account_last_trade_day_date_sync: Option<NaiveDateTime>,
    pub account_unique_trade_day_count: Option<i32>,
    pub account_flow_status: Option<String>,
    pub account_flow_reason: Option<String>,
    pub account_last_status_change: Option<NaiveDateTime>,
    pub account_disable_payout: bool,
    pub account_credit_trading_days: Option<i32>,
    pub account_source_notes: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(met_id))]
pub struct PtAccountMetricHistory {
    pub met_id: i32,
    pub account_number: String,
    pub plan_id: Uuid,
    pub plan_ver_id: i32,
    pub customer_id: Uuid,
    pub trading_group_id: Uuid,
    pub met_date: Option<NaiveDateTime>,
    pub met_active_trading_days: Option<i32>,
    pub met_current_profit: Option<BigDecimal>,
    pub met_current_commission: Option<BigDecimal>,
    pub met_current_swaps: Option<BigDecimal>,
    pub met_current_balance: Option<BigDecimal>,
    pub met_current_equity: Option<BigDecimal>,
    pub met_days_since_initial_deposit: Option<i32>,
    pub met_prev_equity: Option<BigDecimal>,
    pub met_prev_balance: Option<BigDecimal>,
    pub met_daily_loss: Option<BigDecimal>,
    pub met_total_loss: Option<BigDecimal>,
    pub met_enabled: Option<bool>,
    pub met_breached: Option<bool>,
    pub met_passed: Option<bool>,
    pub met_hit_profit_target: Option<bool>,
    pub met_last_history_sync: Option<NaiveDateTime>,
    pub met_last_order_date_sync: Option<NaiveDateTime>,
    pub met_last_trade_day_date_sync: Option<NaiveDateTime>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(account_number, plan_id, plan_ver_id, customer_id, trading_group_id, met_date))]
pub struct PtAccountMetricHistorySlow {
    pub account_number: String,
    pub plan_id: Uuid,
    pub plan_ver_id: i32,
    pub customer_id: Uuid,
    pub trading_group_id: Uuid,
    pub met_date: NaiveDateTime,
    pub met_active_trading_days: Option<i32>,
    pub met_current_profit: Option<BigDecimal>,
    pub met_current_commission: Option<BigDecimal>,
    pub met_current_swaps: Option<BigDecimal>,
    pub met_current_balance: Option<BigDecimal>,
    pub met_current_equity: Option<BigDecimal>,
    pub met_days_since_initial_deposit: Option<i32>,
    pub met_prev_equity: Option<BigDecimal>,
    pub met_prev_balance: Option<BigDecimal>,
    pub met_daily_loss: Option<BigDecimal>,
    pub met_total_loss: Option<BigDecimal>,
    pub met_enabled: Option<bool>,
    pub met_breached: Option<bool>,
    pub met_passed: Option<bool>,
    pub met_hit_profit_target: Option<bool>,
    pub met_last_history_sync: Option<NaiveDateTime>,
    pub met_last_order_date_sync: Option<NaiveDateTime>,
    pub met_last_trade_day_date_sync: Option<NaiveDateTime>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(trade_id, account_number, plan_id, plan_ver_id, customer_id, trading_group_id))]
pub struct PtAccountOpentrade {
    pub trade_id: String,
    pub account_number: String,
    pub plan_id: Uuid,
    pub plan_ver_id: i32,
    pub customer_id: Uuid,
    pub trading_group_id: Uuid,
    pub pat_symbol: Option<String>,
    pub pat_digits: Option<i32>,
    pub pat_cmd: Option<i32>,
    pub pat_volume: Option<i32>,
    pub pat_open_time: Option<NaiveDateTime>,
    pub pat_open_price: Option<BigDecimal>,
    pub pat_sl: Option<BigDecimal>,
    pub pat_tp: Option<BigDecimal>,
    pub pat_close_time: Option<NaiveDateTime>,
    pub pat_expiration: Option<NaiveDateTime>,
    pub pat_reason: Option<i32>,
    pub pat_conv_rate1: Option<BigDecimal>,
    pub pat_conv_rate2: Option<BigDecimal>,
    pub pat_conv_rate3: Option<BigDecimal>,
    pub pat_commission: Option<BigDecimal>,
    pub pat_commission_agent: Option<BigDecimal>,
    pub pat_swaps: Option<BigDecimal>,
    pub pat_close_price: Option<BigDecimal>,
    pub pat_profit: Option<BigDecimal>,
    pub pat_taxes: Option<BigDecimal>,
    pub pat_comment: Option<String>,
    pub pat_balance: Option<BigDecimal>,
    pub pat_margin_rate: Option<BigDecimal>,
    pub pat_server_timestamp: Option<NaiveDateTime>,
    pub pat_magic: Option<String>,
    pub pat_created_ts: NaiveDateTime,
    pub pat_lastupdate_ts: Option<NaiveDateTime>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(trade_id, account_number, plan_id, plan_ver_id, customer_id, trading_group_id))]
pub struct PtAccountTradesHistory {
    pub trade_id: String,
    pub account_number: String,
    pub plan_id: Uuid,
    pub plan_ver_id: i32,
    pub customer_id: Uuid,
    pub trading_group_id: Uuid,
    pub ath_symbol: Option<String>,
    pub ath_digits: Option<i32>,
    pub ath_cmd: Option<i32>,
    pub ath_volume: Option<i32>,
    pub ath_open_time: Option<NaiveDateTime>,
    pub ath_open_price: Option<BigDecimal>,
    pub ath_sl: Option<BigDecimal>,
    pub ath_tp: Option<BigDecimal>,
    pub ath_close_time: Option<NaiveDateTime>,
    pub ath_expiration: Option<NaiveDateTime>,
    pub ath_reason: Option<i32>,
    pub ath_conv_rate1: Option<BigDecimal>,
    pub ath_conv_rate2: Option<BigDecimal>,
    pub ath_conv_rate3: Option<BigDecimal>,
    pub ath_commission: Option<BigDecimal>,
    pub ath_commission_agent: Option<BigDecimal>,
    pub ath_swaps: Option<BigDecimal>,
    pub ath_close_price: Option<BigDecimal>,
    pub ath_profit: Option<BigDecimal>,
    pub ath_taxes: Option<BigDecimal>,
    pub ath_comment: Option<String>,
    pub ath_balance: Option<BigDecimal>,
    pub ath_margin_rate: Option<BigDecimal>,
    pub ath_server_timestamp: Option<NaiveDateTime>,
    pub ath_magic: Option<String>,
    pub ath_created_ts: NaiveDateTime,
    pub ath_lastupdate_ts: Option<NaiveDateTime>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(wd_id))]
pub struct PtAccountWithdrawal {
    pub wd_id: i32,
    pub account_number: String,
    pub plan_id: Uuid,
    pub plan_ver_id: i32,
    pub customer_id: Uuid,
    pub trading_group_id: Uuid,
    pub actioned_by_principal_id: Option<Uuid>,
    pub payment_method_id: Option<Uuid>,
    pub wd_datetime: NaiveDateTime,
    pub wd_amount: BigDecimal,
    pub wd_final_amount: Option<BigDecimal>,
    pub wd_status: Option<String>,
    pub wd_comment: Option<String>,
    pub wd_response_comment: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(wdd_id, wd_id))]
pub struct PtAccountWithdrawalDetail {
    pub wdd_id: i32,
    pub wd_id: i32,
    pub wdd_item_description: String,
    pub wdd_item_comment: Option<String>,
    pub wdd_debit: Option<BigDecimal>,
    pub wdd_credit: Option<BigDecimal>,
    pub wdd_is_credit: bool,
    pub wdd_timedate: NaiveDateTime,
}

